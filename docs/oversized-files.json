{
  "timestamp": "2025-09-19T11:43:53.620Z",
  "totalFiles": 745,
  "compliantFiles": 0,
  "oversizedFiles": 89,
  "criticalFiles": 59,
  "files": [
    {
      "path": "core/salon/components/inventory/product-form.tsx",
      "type": "component",
      "currentLines": 619,
      "maxLines": 300,
      "excessLines": 319,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ProductForm"
      ],
      "functions": [
        {
          "name": "ProductForm",
          "startLine": 63,
          "endLine": 619,
          "lines": 556
        },
        {
          "name": "productSchema",
          "startLine": 33,
          "endLine": 53,
          "lines": 20
        }
      ]
    },
    {
      "path": "core/salon/components/dashboard/service-catalog.tsx",
      "type": "component",
      "currentLines": 617,
      "maxLines": 300,
      "excessLines": 317,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ServiceCatalog, ServiceCard"
      ],
      "functions": [
        {
          "name": "ServiceCatalog",
          "startLine": 227,
          "endLine": 617,
          "lines": 390
        },
        {
          "name": "ServiceCard",
          "startLine": 95,
          "endLine": 225,
          "lines": 130
        }
      ]
    },
    {
      "path": "core/salon/components/dashboard/location-manager.tsx",
      "type": "component",
      "currentLines": 613,
      "maxLines": 300,
      "excessLines": 313,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: LocationManager, LocationCard"
      ],
      "functions": [
        {
          "name": "LocationManager",
          "startLine": 142,
          "endLine": 613,
          "lines": 471
        },
        {
          "name": "LocationCard",
          "startLine": 73,
          "endLine": 140,
          "lines": 67
        }
      ]
    },
    {
      "path": "core/salon/components/staff/payroll-manager.tsx",
      "type": "component",
      "currentLines": 602,
      "maxLines": 300,
      "excessLines": 302,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: PayrollManager"
      ],
      "functions": [
        {
          "name": "PayrollManager",
          "startLine": 49,
          "endLine": 602,
          "lines": 553
        }
      ]
    },
    {
      "path": "core/platform/components/admin/security-center.tsx",
      "type": "component",
      "currentLines": 598,
      "maxLines": 300,
      "excessLines": 298,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: SecurityCenter"
      ],
      "functions": [
        {
          "name": "SecurityCenter",
          "startLine": 69,
          "endLine": 598,
          "lines": 529
        }
      ]
    },
    {
      "path": "core/staff/components/schedule/optimizer.tsx",
      "type": "component",
      "currentLines": 567,
      "maxLines": 300,
      "excessLines": 267,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ScheduleOptimizer"
      ],
      "functions": [
        {
          "name": "ScheduleOptimizer",
          "startLine": 66,
          "endLine": 567,
          "lines": 501
        }
      ]
    },
    {
      "path": "core/staff/components/schedule/availability-manager.tsx",
      "type": "component",
      "currentLines": 554,
      "maxLines": 300,
      "excessLines": 254,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: AvailabilityManager"
      ],
      "functions": [
        {
          "name": "AvailabilityManager",
          "startLine": 53,
          "endLine": 554,
          "lines": 501
        }
      ]
    },
    {
      "path": "core/customer/components/booking/confirmation.tsx",
      "type": "component",
      "currentLines": 540,
      "maxLines": 300,
      "excessLines": 240,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: BookingConfirmationComponent"
      ],
      "functions": [
        {
          "name": "BookingConfirmationComponent",
          "startLine": 52,
          "endLine": 536,
          "lines": 484
        }
      ]
    },
    {
      "path": "core/platform/dal/users/users.queries.ts",
      "type": "dal",
      "currentLines": 532,
      "maxLines": 500,
      "excessLines": 32,
      "severity": "low",
      "splitSuggestions": [
        "Split by domain (queries.ts, mutations.ts)",
        "Extract complex queries to separate files",
        "Create repository pattern classes",
        "Extract large functions: getAvailableRoles, getUserManagementStats, getUsers"
      ],
      "functions": [
        {
          "name": "getAvailableRoles",
          "startLine": 314,
          "endLine": 421,
          "lines": 107
        },
        {
          "name": "getUserManagementStats",
          "startLine": 176,
          "endLine": 247,
          "lines": 71
        },
        {
          "name": "getUsers",
          "startLine": 19,
          "endLine": 70,
          "lines": 51
        },
        {
          "name": "getUsersWithRoles",
          "startLine": 133,
          "endLine": 171,
          "lines": 38
        },
        {
          "name": "getUserById",
          "startLine": 75,
          "endLine": 106,
          "lines": 31
        },
        {
          "name": "getUserSecuritySettings",
          "startLine": 252,
          "endLine": 283,
          "lines": 31
        },
        {
          "name": "getUserMetrics",
          "startLine": 485,
          "endLine": 516,
          "lines": 31
        },
        {
          "name": "getUserRole",
          "startLine": 454,
          "endLine": 480,
          "lines": 26
        },
        {
          "name": "getUserByEmail",
          "startLine": 426,
          "endLine": 449,
          "lines": 23
        },
        {
          "name": "getUserActivity",
          "startLine": 288,
          "endLine": 309,
          "lines": 21
        },
        {
          "name": "getCurrentUser",
          "startLine": 111,
          "endLine": 128,
          "lines": 17
        },
        {
          "name": "calculateProfileCompletion",
          "startLine": 518,
          "endLine": 531,
          "lines": 13
        }
      ]
    },
    {
      "path": "core/salon/components/staff/dashboard.tsx",
      "type": "component",
      "currentLines": 524,
      "maxLines": 300,
      "excessLines": 224,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: StaffDashboard"
      ],
      "functions": [
        {
          "name": "StaffDashboard",
          "startLine": 66,
          "endLine": 473,
          "lines": 407
        },
        {
          "name": "ServiceAssignmentMatrix",
          "startLine": 476,
          "endLine": 524,
          "lines": 48
        }
      ]
    },
    {
      "path": "core/salon/components/appointments/calendar.tsx",
      "type": "component",
      "currentLines": 523,
      "maxLines": 300,
      "excessLines": 223,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: CalendarEnhanced"
      ],
      "functions": [
        {
          "name": "CalendarEnhanced",
          "startLine": 61,
          "endLine": 523,
          "lines": 462
        },
        {
          "name": "timeSlots",
          "startLine": 56,
          "endLine": 59,
          "lines": 3
        }
      ]
    },
    {
      "path": "core/salon/dal/inventory/inventory.queries.ts",
      "type": "dal",
      "currentLines": 516,
      "maxLines": 500,
      "excessLines": 16,
      "severity": "low",
      "splitSuggestions": [
        "Split by domain (queries.ts, mutations.ts)",
        "Extract complex queries to separate files",
        "Create repository pattern classes",
        "Extract large functions: getInventoryMetrics"
      ],
      "functions": [
        {
          "name": "getInventoryMetrics",
          "startLine": 459,
          "endLine": 516,
          "lines": 57
        },
        {
          "name": "getProducts",
          "startLine": 19,
          "endLine": 56,
          "lines": 37
        },
        {
          "name": "getPurchaseOrders",
          "startLine": 285,
          "endLine": 319,
          "lines": 34
        },
        {
          "name": "getStockAlerts",
          "startLine": 392,
          "endLine": 426,
          "lines": 34
        },
        {
          "name": "getActiveAlerts",
          "startLine": 428,
          "endLine": 455,
          "lines": 27
        },
        {
          "name": "getStockLevels",
          "startLine": 219,
          "endLine": 242,
          "lines": 23
        },
        {
          "name": "getProductBySku",
          "startLine": 78,
          "endLine": 97,
          "lines": 19
        },
        {
          "name": "getDefaultStockLocation",
          "startLine": 196,
          "endLine": 215,
          "lines": 19
        },
        {
          "name": "getStockLevelById",
          "startLine": 244,
          "endLine": 263,
          "lines": 19
        },
        {
          "name": "getProductById",
          "startLine": 58,
          "endLine": 76,
          "lines": 18
        },
        {
          "name": "getCategoryById",
          "startLine": 118,
          "endLine": 136,
          "lines": 18
        },
        {
          "name": "getSupplierById",
          "startLine": 157,
          "endLine": 175,
          "lines": 18
        },
        {
          "name": "getPurchaseOrderById",
          "startLine": 321,
          "endLine": 339,
          "lines": 18
        },
        {
          "name": "getLowStockProducts",
          "startLine": 265,
          "endLine": 281,
          "lines": 16
        },
        {
          "name": "getCategories",
          "startLine": 101,
          "endLine": 116,
          "lines": 15
        },
        {
          "name": "getSuppliers",
          "startLine": 140,
          "endLine": 155,
          "lines": 15
        },
        {
          "name": "getStockLocations",
          "startLine": 179,
          "endLine": 194,
          "lines": 15
        },
        {
          "name": "getPurchaseOrderItems",
          "startLine": 341,
          "endLine": 356,
          "lines": 15
        },
        {
          "name": "getStockMovements",
          "startLine": 360,
          "endLine": 362,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/platform/components/admin/user-management.tsx",
      "type": "component",
      "currentLines": 503,
      "maxLines": 300,
      "excessLines": 203,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: UserManagement"
      ],
      "functions": [
        {
          "name": "UserManagement",
          "startLine": 72,
          "endLine": 503,
          "lines": 431
        }
      ]
    },
    {
      "path": "core/customer/hooks/use-bookings.ts",
      "type": "hook",
      "currentLines": 501,
      "maxLines": 150,
      "excessLines": 351,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useUpdateBookingStatus",
          "startLine": 207,
          "endLine": 256,
          "lines": 49
        },
        {
          "name": "useBookingConfirmation",
          "startLine": 461,
          "endLine": 501,
          "lines": 40
        },
        {
          "name": "useServices",
          "startLine": 44,
          "endLine": 75,
          "lines": 31
        },
        {
          "name": "useRescheduleBooking",
          "startLine": 259,
          "endLine": 289,
          "lines": 30
        },
        {
          "name": "useCreateBooking",
          "startLine": 175,
          "endLine": 204,
          "lines": 29
        },
        {
          "name": "useBookingsList",
          "startLine": 144,
          "endLine": 172,
          "lines": 28
        },
        {
          "name": "useRecurringBookings",
          "startLine": 402,
          "endLine": 430,
          "lines": 28
        },
        {
          "name": "useStaff",
          "startLine": 78,
          "endLine": 103,
          "lines": 25
        },
        {
          "name": "useGroupBooking",
          "startLine": 433,
          "endLine": 458,
          "lines": 25
        },
        {
          "name": "useWaitingList",
          "startLine": 355,
          "endLine": 361,
          "lines": 6
        },
        {
          "name": "useAvailability",
          "startLine": 106,
          "endLine": 108,
          "lines": 2
        },
        {
          "name": "useBookingAnalytics",
          "startLine": 292,
          "endLine": 294,
          "lines": 2
        },
        {
          "name": "useCapacityInfo",
          "startLine": 324,
          "endLine": 326,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/staff/components/schedule/manager.tsx",
      "type": "component",
      "currentLines": 500,
      "maxLines": 300,
      "excessLines": 200,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: StaffScheduleManager"
      ],
      "functions": [
        {
          "name": "StaffScheduleManager",
          "startLine": 86,
          "endLine": 500,
          "lines": 414
        }
      ]
    },
    {
      "path": "core/shared/hooks/use-realtime-sync.ts",
      "type": "hook",
      "currentLines": 494,
      "maxLines": 150,
      "excessLines": 344,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useRealtimeSync"
      ],
      "functions": [
        {
          "name": "useRealtimeSync",
          "startLine": 57,
          "endLine": 391,
          "lines": 334
        },
        {
          "name": "subscriptionManager",
          "startLine": 468,
          "endLine": 470,
          "lines": 2
        },
        {
          "name": "reconcileOptimisticUpdate",
          "startLine": 471,
          "endLine": 473,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/auth/actions/user/user-management.action.ts",
      "type": "action",
      "currentLines": 492,
      "maxLines": 250,
      "excessLines": 242,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: register, updateEmail"
      ],
      "functions": [
        {
          "name": "register",
          "startLine": 52,
          "endLine": 158,
          "lines": 106
        },
        {
          "name": "updateEmail",
          "startLine": 379,
          "endLine": 443,
          "lines": 64
        },
        {
          "name": "updateProfile",
          "startLine": 257,
          "endLine": 306,
          "lines": 49
        },
        {
          "name": "forgotPassword",
          "startLine": 161,
          "endLine": 207,
          "lines": 46
        },
        {
          "name": "deleteAccount",
          "startLine": 446,
          "endLine": 492,
          "lines": 46
        },
        {
          "name": "resetPassword",
          "startLine": 210,
          "endLine": 254,
          "lines": 44
        },
        {
          "name": "RegisterSchema",
          "startLine": 8,
          "endLine": 25,
          "lines": 17
        },
        {
          "name": "ResetPasswordSchema",
          "startLine": 31,
          "endLine": 41,
          "lines": 10
        },
        {
          "name": "ForgotPasswordSchema",
          "startLine": 27,
          "endLine": 29,
          "lines": 2
        },
        {
          "name": "changePassword",
          "startLine": 309,
          "endLine": 311,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/platform/components/admin/onboarding-flow.tsx",
      "type": "component",
      "currentLines": 489,
      "maxLines": 300,
      "excessLines": 189,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: UserOnboardingFlow"
      ],
      "functions": [
        {
          "name": "UserOnboardingFlow",
          "startLine": 100,
          "endLine": 489,
          "lines": 389
        }
      ]
    },
    {
      "path": "core/customer/types/portal.types.ts",
      "type": "other",
      "currentLines": 478,
      "maxLines": 400,
      "excessLines": 78,
      "severity": "medium",
      "splitSuggestions": [],
      "functions": []
    },
    {
      "path": "core/staff/components/dashboard/performance.tsx",
      "type": "component",
      "currentLines": 476,
      "maxLines": 300,
      "excessLines": 176,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: PerformanceDashboard"
      ],
      "functions": [
        {
          "name": "PerformanceDashboard",
          "startLine": 38,
          "endLine": 476,
          "lines": 438
        }
      ]
    },
    {
      "path": "core/salon/components/dashboard/salon-dashboard.tsx",
      "type": "component",
      "currentLines": 471,
      "maxLines": 300,
      "excessLines": 171,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: SalonDashboard"
      ],
      "functions": [
        {
          "name": "SalonDashboard",
          "startLine": 105,
          "endLine": 471,
          "lines": 366
        },
        {
          "name": "MetricCard",
          "startLine": 47,
          "endLine": 75,
          "lines": 28
        },
        {
          "name": "LoadingState",
          "startLine": 77,
          "endLine": 103,
          "lines": 26
        }
      ]
    },
    {
      "path": "core/platform/components/admin/role-manager.tsx",
      "type": "component",
      "currentLines": 469,
      "maxLines": 300,
      "excessLines": 169,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: RoleManager"
      ],
      "functions": [
        {
          "name": "RoleManager",
          "startLine": 186,
          "endLine": 469,
          "lines": 283
        },
        {
          "name": "actions",
          "startLine": 178,
          "endLine": 184,
          "lines": 6
        },
        {
          "name": "resources",
          "startLine": 165,
          "endLine": 167,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/components/inventory/product-list.tsx",
      "type": "component",
      "currentLines": 469,
      "maxLines": 300,
      "excessLines": 169,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ProductList"
      ],
      "functions": [
        {
          "name": "ProductList",
          "startLine": 78,
          "endLine": 469,
          "lines": 391
        },
        {
          "name": "ProductDetail",
          "startLine": 56,
          "endLine": 58,
          "lines": 2
        },
        {
          "name": "StockAdjustmentForm",
          "startLine": 63,
          "endLine": 65,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/components/billing/subscription-dashboard.tsx",
      "type": "component",
      "currentLines": 467,
      "maxLines": 300,
      "excessLines": 167,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: SubscriptionDashboard, SubscriptionDetails"
      ],
      "functions": [
        {
          "name": "SubscriptionDashboard",
          "startLine": 56,
          "endLine": 298,
          "lines": 242
        },
        {
          "name": "SubscriptionDetails",
          "startLine": 301,
          "endLine": 467,
          "lines": 166
        }
      ]
    },
    {
      "path": "core/salon/components/salon-customers/segments.tsx",
      "type": "component",
      "currentLines": 466,
      "maxLines": 300,
      "excessLines": 166,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: CustomerSegments"
      ],
      "functions": [
        {
          "name": "CustomerSegments",
          "startLine": 57,
          "endLine": 466,
          "lines": 409
        }
      ]
    },
    {
      "path": "core/staff/components/schedule/conflict-resolver.tsx",
      "type": "component",
      "currentLines": 460,
      "maxLines": 300,
      "excessLines": 160,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ConflictResolver"
      ],
      "functions": [
        {
          "name": "ConflictResolver",
          "startLine": 74,
          "endLine": 460,
          "lines": 386
        }
      ]
    },
    {
      "path": "core/auth/components/register/register.tsx",
      "type": "component",
      "currentLines": 457,
      "maxLines": 300,
      "excessLines": 157,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: RegisterForm"
      ],
      "functions": [
        {
          "name": "RegisterForm",
          "startLine": 59,
          "endLine": 457,
          "lines": 398
        },
        {
          "name": "calculatePasswordStrength",
          "startLine": 39,
          "endLine": 57,
          "lines": 18
        }
      ]
    },
    {
      "path": "core/salon/components/staff/batch-operations.tsx",
      "type": "component",
      "currentLines": 452,
      "maxLines": 300,
      "excessLines": 152,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: StaffBatchOptimistic"
      ],
      "functions": [
        {
          "name": "StaffBatchOptimistic",
          "startLine": 47,
          "endLine": 452,
          "lines": 405
        }
      ]
    },
    {
      "path": "core/staff/components/schedule/calendar.tsx",
      "type": "component",
      "currentLines": 446,
      "maxLines": 300,
      "excessLines": 146,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ScheduleCalendar"
      ],
      "functions": [
        {
          "name": "ScheduleCalendar",
          "startLine": 53,
          "endLine": 446,
          "lines": 393
        }
      ]
    },
    {
      "path": "core/shared/components/error-recovery.tsx",
      "type": "component",
      "currentLines": 435,
      "maxLines": 300,
      "excessLines": 135,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple smaller components",
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ConflictResolution, ErrorRecovery"
      ],
      "functions": [
        {
          "name": "ConflictResolution",
          "startLine": 281,
          "endLine": 379,
          "lines": 98
        },
        {
          "name": "ErrorRecovery",
          "startLine": 173,
          "endLine": 266,
          "lines": 93
        },
        {
          "name": "SyncStatus",
          "startLine": 389,
          "endLine": 432,
          "lines": 43
        },
        {
          "name": "useNetworkStatus",
          "startLine": 143,
          "endLine": 170,
          "lines": 27
        },
        {
          "name": "retryWithBackoff",
          "startLine": 37,
          "endLine": 39,
          "lines": 2
        },
        {
          "name": "offlineQueue",
          "startLine": 140,
          "endLine": 142,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/platform/components/settings/form.tsx",
      "type": "component",
      "currentLines": 423,
      "maxLines": 300,
      "excessLines": 123,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: SettingsFormOptimistic"
      ],
      "functions": [
        {
          "name": "SettingsFormOptimistic",
          "startLine": 41,
          "endLine": 423,
          "lines": 382
        },
        {
          "name": "SalonSettingsSchema",
          "startLine": 19,
          "endLine": 32,
          "lines": 13
        }
      ]
    },
    {
      "path": "core/salon/components/appointments/page-client.tsx",
      "type": "component",
      "currentLines": 420,
      "maxLines": 300,
      "excessLines": 120,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: AppointmentsPageClient"
      ],
      "functions": [
        {
          "name": "AppointmentsPageClient",
          "startLine": 54,
          "endLine": 420,
          "lines": 366
        }
      ]
    },
    {
      "path": "core/auth/actions/security/security-audit.action.ts",
      "type": "action",
      "currentLines": 419,
      "maxLines": 250,
      "excessLines": 169,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: checkSuspiciousPatterns"
      ],
      "functions": [
        {
          "name": "checkSuspiciousPatterns",
          "startLine": 289,
          "endLine": 356,
          "lines": 67
        },
        {
          "name": "logSecurityEvent",
          "startLine": 33,
          "endLine": 64,
          "lines": 31
        },
        {
          "name": "logAuthenticationAttempt",
          "startLine": 67,
          "endLine": 69,
          "lines": 2
        },
        {
          "name": "logLogout",
          "startLine": 90,
          "endLine": 92,
          "lines": 2
        },
        {
          "name": "logPasswordChange",
          "startLine": 108,
          "endLine": 110,
          "lines": 2
        },
        {
          "name": "logRoleChange",
          "startLine": 126,
          "endLine": 128,
          "lines": 2
        },
        {
          "name": "logDataAccess",
          "startLine": 150,
          "endLine": 152,
          "lines": 2
        },
        {
          "name": "logFailedAuthorization",
          "startLine": 173,
          "endLine": 175,
          "lines": 2
        },
        {
          "name": "logSuspiciousActivity",
          "startLine": 194,
          "endLine": 196,
          "lines": 2
        },
        {
          "name": "getUserSecurityEvents",
          "startLine": 217,
          "endLine": 219,
          "lines": 2
        },
        {
          "name": "getRecentSecurityEvents",
          "startLine": 246,
          "endLine": 248,
          "lines": 2
        },
        {
          "name": "generateSecurityReport",
          "startLine": 359,
          "endLine": 361,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/components/appointments/availability-checker.tsx",
      "type": "component",
      "currentLines": 414,
      "maxLines": 300,
      "excessLines": 114,
      "severity": "critical",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: AvailabilityChecker"
      ],
      "functions": [
        {
          "name": "AvailabilityChecker",
          "startLine": 44,
          "endLine": 414,
          "lines": 370
        }
      ]
    },
    {
      "path": "core/shared/components/states.tsx",
      "type": "component",
      "currentLines": 409,
      "maxLines": 300,
      "excessLines": 109,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple smaller components",
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: LoadingState, EmptyState"
      ],
      "functions": [
        {
          "name": "LoadingState",
          "startLine": 167,
          "endLine": 274,
          "lines": 107
        },
        {
          "name": "EmptyState",
          "startLine": 89,
          "endLine": 154,
          "lines": 65
        },
        {
          "name": "presetConfigs",
          "startLine": 50,
          "endLine": 87,
          "lines": 37
        },
        {
          "name": "ErrorState",
          "startLine": 291,
          "endLine": 325,
          "lines": 34
        },
        {
          "name": "SuccessState",
          "startLine": 341,
          "endLine": 368,
          "lines": 27
        },
        {
          "name": "InfoState",
          "startLine": 384,
          "endLine": 409,
          "lines": 25
        }
      ]
    },
    {
      "path": "core/customer/components/booking/time-selection.tsx",
      "type": "component",
      "currentLines": 398,
      "maxLines": 300,
      "excessLines": 98,
      "severity": "medium",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: TimeSelection"
      ],
      "functions": [
        {
          "name": "TimeSelection",
          "startLine": 23,
          "endLine": 398,
          "lines": 375
        }
      ]
    },
    {
      "path": "core/salon/actions/billing/webhook-handlers.ts",
      "type": "action",
      "currentLines": 395,
      "maxLines": 250,
      "excessLines": 145,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "verifyWebhookEvent",
          "startLine": 381,
          "endLine": 395,
          "lines": 14
        },
        {
          "name": "handlePaymentIntentSucceeded",
          "startLine": 17,
          "endLine": 19,
          "lines": 2
        },
        {
          "name": "handlePaymentIntentFailed",
          "startLine": 47,
          "endLine": 49,
          "lines": 2
        },
        {
          "name": "handleInvoicePaymentSucceeded",
          "startLine": 75,
          "endLine": 77,
          "lines": 2
        },
        {
          "name": "handleInvoicePaymentFailed",
          "startLine": 105,
          "endLine": 107,
          "lines": 2
        },
        {
          "name": "handleSubscriptionCreated",
          "startLine": 132,
          "endLine": 134,
          "lines": 2
        },
        {
          "name": "handleSubscriptionUpdated",
          "startLine": 178,
          "endLine": 180,
          "lines": 2
        },
        {
          "name": "handleSubscriptionDeleted",
          "startLine": 211,
          "endLine": 213,
          "lines": 2
        },
        {
          "name": "handleInvoiceCreated",
          "startLine": 238,
          "endLine": 240,
          "lines": 2
        },
        {
          "name": "handlePaymentMethodAttached",
          "startLine": 250,
          "endLine": 252,
          "lines": 2
        },
        {
          "name": "handlePaymentMethodDetached",
          "startLine": 294,
          "endLine": 296,
          "lines": 2
        },
        {
          "name": "handleChargeDisputeCreated",
          "startLine": 315,
          "endLine": 317,
          "lines": 2
        },
        {
          "name": "updateRevenueAnalytics",
          "startLine": 343,
          "endLine": 345,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/components/billing/revenue-analytics.tsx",
      "type": "component",
      "currentLines": 392,
      "maxLines": 300,
      "excessLines": 92,
      "severity": "medium",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: RevenueAnalytics"
      ],
      "functions": [
        {
          "name": "RevenueAnalytics",
          "startLine": 54,
          "endLine": 392,
          "lines": 338
        }
      ]
    },
    {
      "path": "core/staff/actions/scheduling/scheduling.action.ts",
      "type": "action",
      "currentLines": 389,
      "maxLines": 250,
      "excessLines": 139,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "autoAssignAppointmentsAction",
          "startLine": 78,
          "endLine": 91,
          "lines": 13
        },
        {
          "name": "suggestOptimalSlotsAction",
          "startLine": 143,
          "endLine": 156,
          "lines": 13
        },
        {
          "name": "createStaffScheduleAction",
          "startLine": 165,
          "endLine": 176,
          "lines": 11
        },
        {
          "name": "createBlockedTimeAction",
          "startLine": 200,
          "endLine": 211,
          "lines": 11
        },
        {
          "name": "createTimeOffRequestAction",
          "startLine": 235,
          "endLine": 246,
          "lines": 11
        },
        {
          "name": "detectConflictsAction",
          "startLine": 119,
          "endLine": 126,
          "lines": 7
        },
        {
          "name": "batchScheduleOperationsAction",
          "startLine": 274,
          "endLine": 279,
          "lines": 5
        },
        {
          "name": "resolveConflictAction",
          "startLine": 39,
          "endLine": 41,
          "lines": 2
        },
        {
          "name": "optimizeScheduleAction",
          "startLine": 58,
          "endLine": 60,
          "lines": 2
        },
        {
          "name": "getStaffAvailabilityAction",
          "startLine": 100,
          "endLine": 102,
          "lines": 2
        },
        {
          "name": "updateStaffScheduleAction",
          "startLine": 181,
          "endLine": 183,
          "lines": 2
        },
        {
          "name": "updateBlockedTimeAction",
          "startLine": 216,
          "endLine": 218,
          "lines": 2
        },
        {
          "name": "updateTimeOffRequestAction",
          "startLine": 251,
          "endLine": 253,
          "lines": 2
        },
        {
          "name": "syncScheduleChangesAction",
          "startLine": 340,
          "endLine": 342,
          "lines": 2
        },
        {
          "name": "broadcastScheduleUpdateAction",
          "startLine": 370,
          "endLine": 372,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/components/appointments/history.tsx",
      "type": "component",
      "currentLines": 387,
      "maxLines": 300,
      "excessLines": 87,
      "severity": "medium",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: AppointmentHistory"
      ],
      "functions": [
        {
          "name": "AppointmentHistory",
          "startLine": 26,
          "endLine": 387,
          "lines": 361
        }
      ]
    },
    {
      "path": "core/customer/components/common/salon-search.tsx",
      "type": "component",
      "currentLines": 386,
      "maxLines": 300,
      "excessLines": 86,
      "severity": "medium",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: SalonSearch"
      ],
      "functions": [
        {
          "name": "SalonSearch",
          "startLine": 24,
          "endLine": 386,
          "lines": 362
        }
      ]
    },
    {
      "path": "core/salon/actions/billing/invoice.action.ts",
      "type": "action",
      "currentLines": 384,
      "maxLines": 250,
      "excessLines": 134,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: generateInvoicePDF"
      ],
      "functions": [
        {
          "name": "generateInvoicePDF",
          "startLine": 26,
          "endLine": 87,
          "lines": 61
        },
        {
          "name": "voidInvoice",
          "startLine": 277,
          "endLine": 309,
          "lines": 32
        },
        {
          "name": "generatePDFBuffer",
          "startLine": 336,
          "endLine": 366,
          "lines": 30
        },
        {
          "name": "generateInvoiceNumber",
          "startLine": 312,
          "endLine": 334,
          "lines": 22
        },
        {
          "name": "sendEmailWithAttachment",
          "startLine": 368,
          "endLine": 384,
          "lines": 16
        },
        {
          "name": "createInvoice",
          "startLine": 89,
          "endLine": 91,
          "lines": 2
        },
        {
          "name": "markInvoiceAsPaid",
          "startLine": 174,
          "endLine": 176,
          "lines": 2
        },
        {
          "name": "sendInvoiceEmail",
          "startLine": 213,
          "endLine": 215,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/components/profile/preferences-form.tsx",
      "type": "component",
      "currentLines": 360,
      "maxLines": 300,
      "excessLines": 60,
      "severity": "medium",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: PreferencesForm"
      ],
      "functions": [
        {
          "name": "PreferencesForm",
          "startLine": 51,
          "endLine": 360,
          "lines": 309
        },
        {
          "name": "TIMEZONES",
          "startLine": 21,
          "endLine": 23,
          "lines": 2
        },
        {
          "name": "LANGUAGES",
          "startLine": 30,
          "endLine": 32,
          "lines": 2
        },
        {
          "name": "TIME_SLOTS",
          "startLine": 43,
          "endLine": 45,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/platform/components/admin/dashboard.tsx",
      "type": "component",
      "currentLines": 359,
      "maxLines": 300,
      "excessLines": 59,
      "severity": "medium",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: AdminDashboard"
      ],
      "functions": [
        {
          "name": "AdminDashboard",
          "startLine": 32,
          "endLine": 358,
          "lines": 326
        }
      ]
    },
    {
      "path": "core/salon/actions/inventory/inventory.action.ts",
      "type": "action",
      "currentLines": 355,
      "maxLines": 250,
      "excessLines": 105,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "bulkUpdateProductStatusAction",
          "startLine": 331,
          "endLine": 343,
          "lines": 12
        },
        {
          "name": "updateProductAction",
          "startLine": 51,
          "endLine": 62,
          "lines": 11
        },
        {
          "name": "adjustStockAction",
          "startLine": 192,
          "endLine": 203,
          "lines": 11
        },
        {
          "name": "transferStockAction",
          "startLine": 205,
          "endLine": 216,
          "lines": 11
        },
        {
          "name": "updatePurchaseOrderAction",
          "startLine": 232,
          "endLine": 243,
          "lines": 11
        },
        {
          "name": "updatePurchaseOrderStatusAction",
          "startLine": 245,
          "endLine": 256,
          "lines": 11
        },
        {
          "name": "createProductAction",
          "startLine": 39,
          "endLine": 49,
          "lines": 10
        },
        {
          "name": "deleteProductAction",
          "startLine": 64,
          "endLine": 74,
          "lines": 10
        },
        {
          "name": "createCategoryAction",
          "startLine": 78,
          "endLine": 88,
          "lines": 10
        },
        {
          "name": "updateCategoryAction",
          "startLine": 90,
          "endLine": 100,
          "lines": 10
        },
        {
          "name": "deleteCategoryAction",
          "startLine": 102,
          "endLine": 112,
          "lines": 10
        },
        {
          "name": "createSupplierAction",
          "startLine": 116,
          "endLine": 126,
          "lines": 10
        },
        {
          "name": "updateSupplierAction",
          "startLine": 128,
          "endLine": 138,
          "lines": 10
        },
        {
          "name": "deleteSupplierAction",
          "startLine": 140,
          "endLine": 150,
          "lines": 10
        },
        {
          "name": "createStockLocationAction",
          "startLine": 154,
          "endLine": 164,
          "lines": 10
        },
        {
          "name": "updateStockLocationAction",
          "startLine": 166,
          "endLine": 176,
          "lines": 10
        },
        {
          "name": "deleteStockLocationAction",
          "startLine": 178,
          "endLine": 188,
          "lines": 10
        },
        {
          "name": "createPurchaseOrderAction",
          "startLine": 220,
          "endLine": 230,
          "lines": 10
        },
        {
          "name": "deletePurchaseOrderAction",
          "startLine": 275,
          "endLine": 285,
          "lines": 10
        },
        {
          "name": "resolveStockAlertAction",
          "startLine": 289,
          "endLine": 299,
          "lines": 10
        },
        {
          "name": "bulkDeleteProductsAction",
          "startLine": 345,
          "endLine": 355,
          "lines": 10
        },
        {
          "name": "receivePurchaseOrderItemAction",
          "startLine": 258,
          "endLine": 260,
          "lines": 2
        },
        {
          "name": "createStockAlertAction",
          "startLine": 301,
          "endLine": 303,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/hooks/use-mutations.ts",
      "type": "hook",
      "currentLines": 354,
      "maxLines": 150,
      "excessLines": 204,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useRedeemPoints",
          "startLine": 266,
          "endLine": 309,
          "lines": 43
        },
        {
          "name": "useAdjustPoints",
          "startLine": 314,
          "endLine": 354,
          "lines": 40
        },
        {
          "name": "useAwardPointsForAppointment",
          "startLine": 226,
          "endLine": 261,
          "lines": 35
        },
        {
          "name": "useAddLoyaltyTransaction",
          "startLine": 187,
          "endLine": 221,
          "lines": 34
        },
        {
          "name": "useUpdateLoyaltyProgram",
          "startLine": 64,
          "endLine": 92,
          "lines": 28
        },
        {
          "name": "useUpdateCustomerLoyalty",
          "startLine": 154,
          "endLine": 182,
          "lines": 28
        },
        {
          "name": "useCreateLoyaltyProgram",
          "startLine": 35,
          "endLine": 59,
          "lines": 24
        },
        {
          "name": "useEnrollCustomer",
          "startLine": 125,
          "endLine": 149,
          "lines": 24
        },
        {
          "name": "useDeleteLoyaltyProgram",
          "startLine": 97,
          "endLine": 120,
          "lines": 23
        }
      ]
    },
    {
      "path": "core/shared/hooks/optimistic/use-optimistic-list.ts",
      "type": "hook",
      "currentLines": 353,
      "maxLines": 150,
      "excessLines": 203,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useOptimisticList",
          "startLine": 19,
          "endLine": 21,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/staff/actions/crud/crud.action.ts",
      "type": "action",
      "currentLines": 342,
      "maxLines": 250,
      "excessLines": 92,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: createStaffMemberAction"
      ],
      "functions": [
        {
          "name": "createStaffMemberAction",
          "startLine": 32,
          "endLine": 152,
          "lines": 120
        },
        {
          "name": "deleteStaffMemberAction",
          "startLine": 232,
          "endLine": 268,
          "lines": 36
        },
        {
          "name": "getStaffAction",
          "startLine": 273,
          "endLine": 295,
          "lines": 22
        },
        {
          "name": "getStaffByIdAction",
          "startLine": 300,
          "endLine": 322,
          "lines": 22
        },
        {
          "name": "getStaffProfileByIdAction",
          "startLine": 328,
          "endLine": 332,
          "lines": 4
        },
        {
          "name": "getStaffProfilesAction",
          "startLine": 338,
          "endLine": 342,
          "lines": 4
        },
        {
          "name": "updateStaffMemberAction",
          "startLine": 157,
          "endLine": 159,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/shared/hooks/use-optimistic-updates.ts",
      "type": "hook",
      "currentLines": 336,
      "maxLines": 150,
      "excessLines": 186,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useOptimisticForm",
          "startLine": 284,
          "endLine": 289,
          "lines": 5
        },
        {
          "name": "useOptimisticUpdates",
          "startLine": 20,
          "endLine": 22,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/staff/hooks/use-optimization.ts",
      "type": "hook",
      "currentLines": 334,
      "maxLines": 150,
      "excessLines": 184,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useOptimization"
      ],
      "functions": [
        {
          "name": "useOptimization",
          "startLine": 65,
          "endLine": 334,
          "lines": 269
        }
      ]
    },
    {
      "path": "core/customer/actions/profile/portal.action.ts",
      "type": "action",
      "currentLines": 331,
      "maxLines": 250,
      "excessLines": 81,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "updatePreferencesAction",
          "startLine": 69,
          "endLine": 101,
          "lines": 32
        },
        {
          "name": "submitReviewAction",
          "startLine": 234,
          "endLine": 264,
          "lines": 30
        },
        {
          "name": "updateProfileAction",
          "startLine": 41,
          "endLine": 67,
          "lines": 26
        },
        {
          "name": "updateReviewAction",
          "startLine": 266,
          "endLine": 291,
          "lines": 25
        },
        {
          "name": "createBookingAction",
          "startLine": 122,
          "endLine": 143,
          "lines": 21
        },
        {
          "name": "uploadProfileImageAction",
          "startLine": 103,
          "endLine": 119,
          "lines": 16
        },
        {
          "name": "cancelBookingAction",
          "startLine": 145,
          "endLine": 156,
          "lines": 11
        },
        {
          "name": "removeFromFavoritesAction",
          "startLine": 193,
          "endLine": 204,
          "lines": 11
        },
        {
          "name": "joinLoyaltyProgramAction",
          "startLine": 207,
          "endLine": 218,
          "lines": 11
        },
        {
          "name": "redeemRewardAction",
          "startLine": 220,
          "endLine": 231,
          "lines": 11
        },
        {
          "name": "deleteReviewAction",
          "startLine": 293,
          "endLine": 304,
          "lines": 11
        },
        {
          "name": "markNotificationReadAction",
          "startLine": 307,
          "endLine": 318,
          "lines": 11
        },
        {
          "name": "markAllNotificationsReadAction",
          "startLine": 320,
          "endLine": 331,
          "lines": 11
        },
        {
          "name": "rescheduleBookingAction",
          "startLine": 158,
          "endLine": 160,
          "lines": 2
        },
        {
          "name": "addToFavoritesAction",
          "startLine": 176,
          "endLine": 178,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/shared/hooks/optimistic/use-optimistic-batch.ts",
      "type": "hook",
      "currentLines": 328,
      "maxLines": 150,
      "excessLines": 178,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useOptimisticBatch"
      ],
      "functions": [
        {
          "name": "useOptimisticBatch",
          "startLine": 33,
          "endLine": 276,
          "lines": 243
        },
        {
          "name": "useOptimisticBulkDelete",
          "startLine": 301,
          "endLine": 328,
          "lines": 27
        },
        {
          "name": "useOptimisticBulkUpdate",
          "startLine": 279,
          "endLine": 298,
          "lines": 19
        }
      ]
    },
    {
      "path": "core/customer/components/common/gift-card-form.tsx",
      "type": "component",
      "currentLines": 327,
      "maxLines": 300,
      "excessLines": 27,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: GiftCardForm"
      ],
      "functions": [
        {
          "name": "GiftCardForm",
          "startLine": 56,
          "endLine": 326,
          "lines": 270
        },
        {
          "name": "formSchema",
          "startLine": 30,
          "endLine": 43,
          "lines": 13
        }
      ]
    },
    {
      "path": "core/customer/components/booking/list.tsx",
      "type": "component",
      "currentLines": 325,
      "maxLines": 300,
      "excessLines": 25,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: BookingListSection"
      ],
      "functions": [
        {
          "name": "BookingListSection",
          "startLine": 48,
          "endLine": 325,
          "lines": 277
        }
      ]
    },
    {
      "path": "core/salon/components/appointments/schedule-selection.tsx",
      "type": "component",
      "currentLines": 325,
      "maxLines": 300,
      "excessLines": 25,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: ScheduleSelection"
      ],
      "functions": [
        {
          "name": "ScheduleSelection",
          "startLine": 36,
          "endLine": 325,
          "lines": 289
        }
      ]
    },
    {
      "path": "core/auth/actions/auth/authentication.action.ts",
      "type": "action",
      "currentLines": 323,
      "maxLines": 250,
      "excessLines": 73,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: login, verifyOTP"
      ],
      "functions": [
        {
          "name": "login",
          "startLine": 27,
          "endLine": 116,
          "lines": 89
        },
        {
          "name": "verifyOTP",
          "startLine": 200,
          "endLine": 270,
          "lines": 70
        },
        {
          "name": "sendOTP",
          "startLine": 149,
          "endLine": 197,
          "lines": 48
        },
        {
          "name": "logout",
          "startLine": 119,
          "endLine": 146,
          "lines": 27
        },
        {
          "name": "refreshSession",
          "startLine": 273,
          "endLine": 297,
          "lines": 24
        },
        {
          "name": "validateSession",
          "startLine": 299,
          "endLine": 323,
          "lines": 24
        },
        {
          "name": "LoginSchema",
          "startLine": 8,
          "endLine": 11,
          "lines": 3
        },
        {
          "name": "OTPSchema",
          "startLine": 13,
          "endLine": 16,
          "lines": 3
        }
      ]
    },
    {
      "path": "core/salon/actions/billing/billing.action.ts",
      "type": "action",
      "currentLines": 320,
      "maxLines": 250,
      "excessLines": 70,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "STRIPE_SECRET_KEY",
          "startLine": 7,
          "endLine": 9,
          "lines": 2
        },
        {
          "name": "createSubscription",
          "startLine": 10,
          "endLine": 12,
          "lines": 2
        },
        {
          "name": "cancelSubscription",
          "startLine": 132,
          "endLine": 134,
          "lines": 2
        },
        {
          "name": "updateSubscription",
          "startLine": 227,
          "endLine": 229,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/components/profile/personal-info-form.tsx",
      "type": "component",
      "currentLines": 318,
      "maxLines": 300,
      "excessLines": 18,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: PersonalInfoForm"
      ],
      "functions": [
        {
          "name": "PersonalInfoForm",
          "startLine": 31,
          "endLine": 318,
          "lines": 287
        },
        {
          "name": "US_STATES",
          "startLine": 23,
          "endLine": 25,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/auth/actions/auth/auth-helpers.action.ts",
      "type": "action",
      "currentLines": 314,
      "maxLines": 250,
      "excessLines": 64,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: getUserContext"
      ],
      "functions": [
        {
          "name": "getUserContext",
          "startLine": 50,
          "endLine": 137,
          "lines": 87
        },
        {
          "name": "requireAdminRole",
          "startLine": 265,
          "endLine": 290,
          "lines": 25
        },
        {
          "name": "getSalonId",
          "startLine": 241,
          "endLine": 259,
          "lines": 18
        },
        {
          "name": "hasRole",
          "startLine": 170,
          "endLine": 179,
          "lines": 9
        },
        {
          "name": "isStaff",
          "startLine": 211,
          "endLine": 220,
          "lines": 9
        },
        {
          "name": "redirectIfNotAuthenticated",
          "startLine": 226,
          "endLine": 235,
          "lines": 9
        },
        {
          "name": "requireAuth",
          "startLine": 143,
          "endLine": 151,
          "lines": 8
        },
        {
          "name": "requireSalonContext",
          "startLine": 157,
          "endLine": 165,
          "lines": 8
        },
        {
          "name": "requireRole",
          "startLine": 184,
          "endLine": 192,
          "lines": 8
        },
        {
          "name": "isAdmin",
          "startLine": 197,
          "endLine": 199,
          "lines": 2
        },
        {
          "name": "isSalonOwner",
          "startLine": 204,
          "endLine": 206,
          "lines": 2
        },
        {
          "name": "logSecurityEvent",
          "startLine": 295,
          "endLine": 297,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/components/billing/payment-form.tsx",
      "type": "component",
      "currentLines": 314,
      "maxLines": 300,
      "excessLines": 14,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: PaymentForm"
      ],
      "functions": [
        {
          "name": "PaymentForm",
          "startLine": 69,
          "endLine": 314,
          "lines": 245
        },
        {
          "name": "paymentSchema",
          "startLine": 52,
          "endLine": 58,
          "lines": 6
        }
      ]
    },
    {
      "path": "core/salon/components/salon-customers/create-form.tsx",
      "type": "component",
      "currentLines": 313,
      "maxLines": 300,
      "excessLines": 13,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: CustomerCreateForm"
      ],
      "functions": [
        {
          "name": "CustomerCreateForm",
          "startLine": 91,
          "endLine": 313,
          "lines": 222
        },
        {
          "name": "FORM_STEPS",
          "startLine": 48,
          "endLine": 50,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/components/salon-customers/list.tsx",
      "type": "component",
      "currentLines": 307,
      "maxLines": 300,
      "excessLines": 7,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: CustomersList"
      ],
      "functions": [
        {
          "name": "CustomersList",
          "startLine": 37,
          "endLine": 306,
          "lines": 269
        }
      ]
    },
    {
      "path": "core/auth/actions/auth/authorization.action.ts",
      "type": "action",
      "currentLines": 306,
      "maxLines": 250,
      "excessLines": 56,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "getCurrentUser",
          "startLine": 15,
          "endLine": 48,
          "lines": 33
        },
        {
          "name": "hasSalonAccess",
          "startLine": 93,
          "endLine": 122,
          "lines": 29
        },
        {
          "name": "canAccessCustomerData",
          "startLine": 233,
          "endLine": 261,
          "lines": 28
        },
        {
          "name": "ownsSalon",
          "startLine": 125,
          "endLine": 152,
          "lines": 27
        },
        {
          "name": "canManageAppointments",
          "startLine": 155,
          "endLine": 178,
          "lines": 23
        },
        {
          "name": "canManageStaff",
          "startLine": 181,
          "endLine": 204,
          "lines": 23
        },
        {
          "name": "canViewFinancials",
          "startLine": 207,
          "endLine": 230,
          "lines": 23
        },
        {
          "name": "requireSalonAccess",
          "startLine": 297,
          "endLine": 306,
          "lines": 9
        },
        {
          "name": "hasRole",
          "startLine": 51,
          "endLine": 59,
          "lines": 8
        },
        {
          "name": "hasAnyRole",
          "startLine": 62,
          "endLine": 70,
          "lines": 8
        },
        {
          "name": "requireAuth",
          "startLine": 264,
          "endLine": 272,
          "lines": 8
        },
        {
          "name": "requireRole",
          "startLine": 275,
          "endLine": 283,
          "lines": 8
        },
        {
          "name": "requireAnyRole",
          "startLine": 286,
          "endLine": 294,
          "lines": 8
        },
        {
          "name": "isAdmin",
          "startLine": 73,
          "endLine": 75,
          "lines": 2
        },
        {
          "name": "isStaffOrHigher",
          "startLine": 78,
          "endLine": 80,
          "lines": 2
        },
        {
          "name": "isManagerOrHigher",
          "startLine": 83,
          "endLine": 85,
          "lines": 2
        },
        {
          "name": "isOwnerOrAdmin",
          "startLine": 88,
          "endLine": 90,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/hooks/use-gift-cards.ts",
      "type": "hook",
      "currentLines": 304,
      "maxLines": 150,
      "excessLines": 154,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useRefundToGiftCard",
          "startLine": 176,
          "endLine": 201,
          "lines": 25
        },
        {
          "name": "useAdjustGiftCardBalance",
          "startLine": 203,
          "endLine": 226,
          "lines": 23
        },
        {
          "name": "useExtendGiftCardValidity",
          "startLine": 263,
          "endLine": 284,
          "lines": 21
        },
        {
          "name": "useRedeemGiftCard",
          "startLine": 155,
          "endLine": 174,
          "lines": 19
        },
        {
          "name": "useSendGiftCardNotification",
          "startLine": 286,
          "endLine": 303,
          "lines": 17
        },
        {
          "name": "useUpdateGiftCard",
          "startLine": 137,
          "endLine": 153,
          "lines": 16
        },
        {
          "name": "useDeactivateGiftCard",
          "startLine": 228,
          "endLine": 244,
          "lines": 16
        },
        {
          "name": "useCreateGiftCard",
          "startLine": 120,
          "endLine": 135,
          "lines": 15
        },
        {
          "name": "useReactivateGiftCard",
          "startLine": 246,
          "endLine": 261,
          "lines": 15
        },
        {
          "name": "useGiftCardTransactions",
          "startLine": 66,
          "endLine": 73,
          "lines": 7
        },
        {
          "name": "useGiftCardsByPurchaser",
          "startLine": 75,
          "endLine": 82,
          "lines": 7
        },
        {
          "name": "useGiftCardsByRecipient",
          "startLine": 84,
          "endLine": 91,
          "lines": 7
        },
        {
          "name": "useGiftCard",
          "startLine": 42,
          "endLine": 48,
          "lines": 6
        },
        {
          "name": "useGiftCardByCode",
          "startLine": 50,
          "endLine": 56,
          "lines": 6
        },
        {
          "name": "useValidateGiftCard",
          "startLine": 58,
          "endLine": 64,
          "lines": 6
        },
        {
          "name": "useGiftCards",
          "startLine": 35,
          "endLine": 40,
          "lines": 5
        },
        {
          "name": "useGiftCardStats",
          "startLine": 93,
          "endLine": 98,
          "lines": 5
        },
        {
          "name": "useExpiringGiftCards",
          "startLine": 100,
          "endLine": 105,
          "lines": 5
        },
        {
          "name": "useSearchGiftCards",
          "startLine": 107,
          "endLine": 109,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/actions/billing/refund.action.ts",
      "type": "action",
      "currentLines": 304,
      "maxLines": 250,
      "excessLines": 54,
      "severity": "critical",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "getRefundStatus",
          "startLine": 209,
          "endLine": 246,
          "lines": 37
        },
        {
          "name": "STRIPE_SECRET_KEY",
          "startLine": 7,
          "endLine": 9,
          "lines": 2
        },
        {
          "name": "refundPayment",
          "startLine": 10,
          "endLine": 12,
          "lines": 2
        },
        {
          "name": "partialRefund",
          "startLine": 109,
          "endLine": 111,
          "lines": 2
        },
        {
          "name": "processDispute",
          "startLine": 249,
          "endLine": 251,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/components/booking/staff-selection.tsx",
      "type": "component",
      "currentLines": 303,
      "maxLines": 300,
      "excessLines": 3,
      "severity": "low",
      "splitSuggestions": [
        "Extract large functions to custom hooks",
        "Consider component composition pattern",
        "Extract large functions: StaffSelection"
      ],
      "functions": [
        {
          "name": "StaffSelection",
          "startLine": 25,
          "endLine": 303,
          "lines": 278
        }
      ]
    },
    {
      "path": "core/salon/actions/customers/crud.action.ts",
      "type": "action",
      "currentLines": 299,
      "maxLines": 250,
      "excessLines": 49,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: createCustomerAction, deleteCustomerAction"
      ],
      "functions": [
        {
          "name": "createCustomerAction",
          "startLine": 25,
          "endLine": 150,
          "lines": 125
        },
        {
          "name": "deleteCustomerAction",
          "startLine": 235,
          "endLine": 299,
          "lines": 64
        },
        {
          "name": "updateCustomerAction",
          "startLine": 155,
          "endLine": 157,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/actions/loyalty/program.action.ts",
      "type": "action",
      "currentLines": 298,
      "maxLines": 250,
      "excessLines": 48,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: createProgram"
      ],
      "functions": [
        {
          "name": "createProgram",
          "startLine": 28,
          "endLine": 132,
          "lines": 104
        },
        {
          "name": "deleteProgram",
          "startLine": 215,
          "endLine": 263,
          "lines": 48
        },
        {
          "name": "getLoyaltyProgramStats",
          "startLine": 268,
          "endLine": 298,
          "lines": 30
        },
        {
          "name": "updateProgram",
          "startLine": 137,
          "endLine": 139,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/shared/hooks/optimistic/use-optimistic-form.ts",
      "type": "hook",
      "currentLines": 296,
      "maxLines": 150,
      "excessLines": 146,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useOptimisticForm",
          "startLine": 26,
          "endLine": 28,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/actions/billing/payment.action.ts",
      "type": "action",
      "currentLines": 291,
      "maxLines": 250,
      "excessLines": 41,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: retryFailedPayment"
      ],
      "functions": [
        {
          "name": "retryFailedPayment",
          "startLine": 165,
          "endLine": 233,
          "lines": 68
        },
        {
          "name": "STRIPE_SECRET_KEY",
          "startLine": 7,
          "endLine": 9,
          "lines": 2
        },
        {
          "name": "createPaymentIntent",
          "startLine": 10,
          "endLine": 12,
          "lines": 2
        },
        {
          "name": "processPayment",
          "startLine": 71,
          "endLine": 73,
          "lines": 2
        },
        {
          "name": "addPaymentMethod",
          "startLine": 236,
          "endLine": 238,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/staff/actions/bulk/bulk.action.ts",
      "type": "action",
      "currentLines": 286,
      "maxLines": 250,
      "excessLines": 36,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: bulkDeleteStaffAction"
      ],
      "functions": [
        {
          "name": "bulkDeleteStaffAction",
          "startLine": 171,
          "endLine": 233,
          "lines": 62
        },
        {
          "name": "bulkActivateStaffAction",
          "startLine": 22,
          "endLine": 66,
          "lines": 44
        },
        {
          "name": "bulkDeactivateStaffAction",
          "startLine": 71,
          "endLine": 115,
          "lines": 44
        },
        {
          "name": "BulkUpdateRoleSchema",
          "startLine": 14,
          "endLine": 17,
          "lines": 3
        },
        {
          "name": "BulkStaffIdsSchema",
          "startLine": 10,
          "endLine": 12,
          "lines": 2
        },
        {
          "name": "bulkUpdateStaffRoleAction",
          "startLine": 120,
          "endLine": 122,
          "lines": 2
        },
        {
          "name": "bulkUpdateCommissionRatesAction",
          "startLine": 238,
          "endLine": 240,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/actions/billing/financial-reporting.action.ts",
      "type": "action",
      "currentLines": 280,
      "maxLines": 250,
      "excessLines": 30,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: getSubscriptionAnalytics, getPaymentMethodAnalytics"
      ],
      "functions": [
        {
          "name": "getSubscriptionAnalytics",
          "startLine": 85,
          "endLine": 149,
          "lines": 64
        },
        {
          "name": "getPaymentMethodAnalytics",
          "startLine": 152,
          "endLine": 203,
          "lines": 51
        },
        {
          "name": "getRevenueAnalytics",
          "startLine": 8,
          "endLine": 10,
          "lines": 2
        },
        {
          "name": "generateFinancialReport",
          "startLine": 206,
          "endLine": 208,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/staff/hooks/use-staff-mutations.ts",
      "type": "hook",
      "currentLines": 276,
      "maxLines": 150,
      "excessLines": 126,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useUpdateStaffSchedule",
          "startLine": 118,
          "endLine": 138,
          "lines": 20
        },
        {
          "name": "useUpdateStaffProfile",
          "startLine": 47,
          "endLine": 65,
          "lines": 18
        },
        {
          "name": "useUpdateStaffCommission",
          "startLine": 257,
          "endLine": 275,
          "lines": 18
        },
        {
          "name": "useCreateBlockedTime",
          "startLine": 206,
          "endLine": 222,
          "lines": 16
        },
        {
          "name": "useDeactivateStaff",
          "startLine": 67,
          "endLine": 82,
          "lines": 15
        },
        {
          "name": "useToggleStaffFeatured",
          "startLine": 84,
          "endLine": 99,
          "lines": 15
        },
        {
          "name": "useToggleStaffBookable",
          "startLine": 101,
          "endLine": 116,
          "lines": 15
        },
        {
          "name": "useApproveTimeOff",
          "startLine": 156,
          "endLine": 171,
          "lines": 15
        },
        {
          "name": "useRejectTimeOff",
          "startLine": 173,
          "endLine": 188,
          "lines": 15
        },
        {
          "name": "useUpdateBlockedTime",
          "startLine": 224,
          "endLine": 239,
          "lines": 15
        },
        {
          "name": "useCreateStaffProfile",
          "startLine": 31,
          "endLine": 45,
          "lines": 14
        },
        {
          "name": "useCreateTimeOffRequest",
          "startLine": 140,
          "endLine": 154,
          "lines": 14
        },
        {
          "name": "useCancelTimeOff",
          "startLine": 190,
          "endLine": 204,
          "lines": 14
        },
        {
          "name": "useRemoveBlockedTime",
          "startLine": 241,
          "endLine": 255,
          "lines": 14
        }
      ]
    },
    {
      "path": "core/customer/actions/reviews/moderation.action.ts",
      "type": "action",
      "currentLines": 269,
      "maxLines": 250,
      "excessLines": 19,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: bulkDeleteReviews, toggleReviewFeatured, verifyReview"
      ],
      "functions": [
        {
          "name": "bulkDeleteReviews",
          "startLine": 203,
          "endLine": 269,
          "lines": 66
        },
        {
          "name": "toggleReviewFeatured",
          "startLine": 77,
          "endLine": 142,
          "lines": 65
        },
        {
          "name": "verifyReview",
          "startLine": 145,
          "endLine": 200,
          "lines": 55
        },
        {
          "name": "updateReviewStatus",
          "startLine": 17,
          "endLine": 19,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/actions/loyalty/redemption.action.ts",
      "type": "action",
      "currentLines": 257,
      "maxLines": 250,
      "excessLines": 7,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules"
      ],
      "functions": [
        {
          "name": "getAvailableRewards",
          "startLine": 103,
          "endLine": 133,
          "lines": 30
        },
        {
          "name": "redeemLoyaltyPoints",
          "startLine": 15,
          "endLine": 22,
          "lines": 7
        },
        {
          "name": "applyRewardToAppointment",
          "startLine": 138,
          "endLine": 144,
          "lines": 6
        },
        {
          "name": "cancelRedemption",
          "startLine": 206,
          "endLine": 208,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/actions/appointments/crud.action.ts",
      "type": "action",
      "currentLines": 251,
      "maxLines": 250,
      "excessLines": 1,
      "severity": "low",
      "splitSuggestions": [
        "Group related actions into separate files",
        "Extract validation to validators/",
        "Move business logic to core modules",
        "Extract large functions: createAppointmentAction"
      ],
      "functions": [
        {
          "name": "createAppointmentAction",
          "startLine": 44,
          "endLine": 136,
          "lines": 92
        },
        {
          "name": "CreateAppointmentSchema",
          "startLine": 21,
          "endLine": 35,
          "lines": 14
        },
        {
          "name": "UpdateAppointmentSchema",
          "startLine": 37,
          "endLine": 39,
          "lines": 2
        },
        {
          "name": "updateAppointmentAction",
          "startLine": 141,
          "endLine": 143,
          "lines": 2
        },
        {
          "name": "cancelAppointmentAction",
          "startLine": 205,
          "endLine": 207,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-salon-data.ts",
      "type": "hook",
      "currentLines": 251,
      "maxLines": 150,
      "excessLines": 101,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useSalonData"
      ],
      "functions": [
        {
          "name": "useSalonData",
          "startLine": 11,
          "endLine": 136,
          "lines": 125
        },
        {
          "name": "useServiceCatalog",
          "startLine": 175,
          "endLine": 216,
          "lines": 41
        },
        {
          "name": "useSalonAnalytics",
          "startLine": 139,
          "endLine": 172,
          "lines": 33
        },
        {
          "name": "useLocations",
          "startLine": 219,
          "endLine": 251,
          "lines": 32
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-customer-management.ts",
      "type": "hook",
      "currentLines": 250,
      "maxLines": 150,
      "excessLines": 100,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useCustomerManagement"
      ],
      "functions": [
        {
          "name": "useCustomerManagement",
          "startLine": 25,
          "endLine": 250,
          "lines": 225
        }
      ]
    },
    {
      "path": "core/customer/hooks/use-reviews-mutations.ts",
      "type": "hook",
      "currentLines": 244,
      "maxLines": 150,
      "excessLines": 94,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useUpdateReviewStatus",
          "startLine": 62,
          "endLine": 84,
          "lines": 22
        },
        {
          "name": "useCreateReview",
          "startLine": 25,
          "endLine": 42,
          "lines": 17
        },
        {
          "name": "useReviewVote",
          "startLine": 173,
          "endLine": 190,
          "lines": 17
        },
        {
          "name": "useUpdateReview",
          "startLine": 44,
          "endLine": 60,
          "lines": 16
        },
        {
          "name": "useAddReviewResponse",
          "startLine": 86,
          "endLine": 102,
          "lines": 16
        },
        {
          "name": "useUpdateReviewResponse",
          "startLine": 104,
          "endLine": 120,
          "lines": 16
        },
        {
          "name": "useRemoveReviewVote",
          "startLine": 192,
          "endLine": 208,
          "lines": 16
        },
        {
          "name": "useFlagReview",
          "startLine": 210,
          "endLine": 226,
          "lines": 16
        },
        {
          "name": "useRemoveReviewResponse",
          "startLine": 122,
          "endLine": 137,
          "lines": 15
        },
        {
          "name": "useToggleReviewFeatured",
          "startLine": 139,
          "endLine": 154,
          "lines": 15
        },
        {
          "name": "useToggleReviewVerified",
          "startLine": 156,
          "endLine": 171,
          "lines": 15
        },
        {
          "name": "useDeleteReview",
          "startLine": 228,
          "endLine": 243,
          "lines": 15
        }
      ]
    },
    {
      "path": "core/shared/hooks/optimistic/use-optimistic-crud.ts",
      "type": "hook",
      "currentLines": 242,
      "maxLines": 150,
      "excessLines": 92,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useOptimisticCrud",
          "startLine": 28,
          "endLine": 30,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/customer/hooks/use-calendar-logic.ts",
      "type": "hook",
      "currentLines": 235,
      "maxLines": 150,
      "excessLines": 85,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useCalendarLogic"
      ],
      "functions": [
        {
          "name": "useCalendarLogic",
          "startLine": 19,
          "endLine": 235,
          "lines": 216
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-billing.ts",
      "type": "hook",
      "currentLines": 234,
      "maxLines": 150,
      "excessLines": 84,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useSetDefaultPaymentMethod",
          "startLine": 206,
          "endLine": 222,
          "lines": 16
        },
        {
          "name": "useProcessPayment",
          "startLine": 132,
          "endLine": 147,
          "lines": 15
        },
        {
          "name": "useRefundPayment",
          "startLine": 149,
          "endLine": 164,
          "lines": 15
        },
        {
          "name": "useAddPaymentMethod",
          "startLine": 177,
          "endLine": 192,
          "lines": 15
        },
        {
          "name": "useUpdateBilling",
          "startLine": 109,
          "endLine": 119,
          "lines": 10
        },
        {
          "name": "useRemovePaymentMethod",
          "startLine": 194,
          "endLine": 204,
          "lines": 10
        },
        {
          "name": "useCreateBilling",
          "startLine": 98,
          "endLine": 107,
          "lines": 9
        },
        {
          "name": "useDeleteBilling",
          "startLine": 121,
          "endLine": 130,
          "lines": 9
        },
        {
          "name": "useCreateInvoice",
          "startLine": 166,
          "endLine": 175,
          "lines": 9
        },
        {
          "name": "useRetryPayment",
          "startLine": 224,
          "endLine": 233,
          "lines": 9
        },
        {
          "name": "useBilling",
          "startLine": 38,
          "endLine": 44,
          "lines": 6
        },
        {
          "name": "useInvoices",
          "startLine": 46,
          "endLine": 52,
          "lines": 6
        },
        {
          "name": "usePaymentMethods",
          "startLine": 54,
          "endLine": 60,
          "lines": 6
        },
        {
          "name": "useDefaultPaymentMethod",
          "startLine": 62,
          "endLine": 68,
          "lines": 6
        },
        {
          "name": "useBillingStats",
          "startLine": 70,
          "endLine": 76,
          "lines": 6
        },
        {
          "name": "useUnpaidInvoices",
          "startLine": 78,
          "endLine": 84,
          "lines": 6
        },
        {
          "name": "useBillings",
          "startLine": 31,
          "endLine": 36,
          "lines": 5
        },
        {
          "name": "useRevenueData",
          "startLine": 86,
          "endLine": 88,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/shared/hooks/optimistic/use-optimistic-toggle.ts",
      "type": "hook",
      "currentLines": 228,
      "maxLines": 150,
      "excessLines": 78,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useOptimisticToggle",
          "startLine": 14,
          "endLine": 16,
          "lines": 2
        },
        {
          "name": "useOptimisticMultiToggle",
          "startLine": 117,
          "endLine": 119,
          "lines": 2
        }
      ]
    },
    {
      "path": "core/staff/hooks/use-conflict-detection.ts",
      "type": "hook",
      "currentLines": 225,
      "maxLines": 150,
      "excessLines": 75,
      "severity": "critical",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useConflictDetection"
      ],
      "functions": [
        {
          "name": "useConflictDetection",
          "startLine": 49,
          "endLine": 225,
          "lines": 176
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-appointments-mutations.ts",
      "type": "hook",
      "currentLines": 196,
      "maxLines": 150,
      "excessLines": 46,
      "severity": "low",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useRescheduleAppointment",
          "startLine": 135,
          "endLine": 157,
          "lines": 22
        },
        {
          "name": "useAddAppointmentServices",
          "startLine": 162,
          "endLine": 180,
          "lines": 18
        },
        {
          "name": "useUpdateAppointment",
          "startLine": 38,
          "endLine": 54,
          "lines": 16
        },
        {
          "name": "useCancelAppointment",
          "startLine": 59,
          "endLine": 70,
          "lines": 11
        },
        {
          "name": "useCreateAppointment",
          "startLine": 23,
          "endLine": 33,
          "lines": 10
        },
        {
          "name": "useConfirmAppointment",
          "startLine": 75,
          "endLine": 85,
          "lines": 10
        },
        {
          "name": "useCheckInAppointment",
          "startLine": 90,
          "endLine": 100,
          "lines": 10
        },
        {
          "name": "useCompleteAppointment",
          "startLine": 105,
          "endLine": 115,
          "lines": 10
        },
        {
          "name": "useMarkNoShow",
          "startLine": 120,
          "endLine": 130,
          "lines": 10
        },
        {
          "name": "useRemoveAppointmentService",
          "startLine": 185,
          "endLine": 195,
          "lines": 10
        }
      ]
    },
    {
      "path": "core/staff/hooks/use-schedule-sync.ts",
      "type": "hook",
      "currentLines": 193,
      "maxLines": 150,
      "excessLines": 43,
      "severity": "low",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useScheduleSync"
      ],
      "functions": [
        {
          "name": "useScheduleSync",
          "startLine": 31,
          "endLine": 193,
          "lines": 162
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-services-mutations.ts",
      "type": "hook",
      "currentLines": 190,
      "maxLines": 150,
      "excessLines": 40,
      "severity": "low",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers"
      ],
      "functions": [
        {
          "name": "useUpdateStaffService",
          "startLine": 138,
          "endLine": 155,
          "lines": 17
        },
        {
          "name": "useRemoveServiceFromStaff",
          "startLine": 160,
          "endLine": 175,
          "lines": 15
        },
        {
          "name": "useUpdateService",
          "startLine": 40,
          "endLine": 51,
          "lines": 11
        },
        {
          "name": "useToggleServiceFeatured",
          "startLine": 70,
          "endLine": 81,
          "lines": 11
        },
        {
          "name": "useCreateServiceCategory",
          "startLine": 86,
          "endLine": 97,
          "lines": 11
        },
        {
          "name": "useDeleteServiceCategory",
          "startLine": 108,
          "endLine": 118,
          "lines": 10
        },
        {
          "name": "useAssignServiceToStaff",
          "startLine": 123,
          "endLine": 133,
          "lines": 10
        },
        {
          "name": "useCreateService",
          "startLine": 26,
          "endLine": 35,
          "lines": 9
        },
        {
          "name": "useDeleteService",
          "startLine": 56,
          "endLine": 65,
          "lines": 9
        },
        {
          "name": "useBulkUpdateServicePrices",
          "startLine": 180,
          "endLine": 189,
          "lines": 9
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-inventory.ts",
      "type": "hook",
      "currentLines": 155,
      "maxLines": 150,
      "excessLines": 5,
      "severity": "low",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useInventory"
      ],
      "functions": [
        {
          "name": "useInventory",
          "startLine": 24,
          "endLine": 154,
          "lines": 130
        }
      ]
    },
    {
      "path": "core/salon/hooks/use-appointment-list.ts",
      "type": "hook",
      "currentLines": 152,
      "maxLines": 150,
      "excessLines": 2,
      "severity": "low",
      "splitSuggestions": [
        "Split into multiple specialized hooks",
        "Extract utility functions to helpers",
        "Extract large functions: useAppointmentList"
      ],
      "functions": [
        {
          "name": "useAppointmentList",
          "startLine": 13,
          "endLine": 152,
          "lines": 139
        }
      ]
    }
  ],
  "statistics": {
    "averageFileSize": 45,
    "largestFile": {
      "path": "core/salon/components/inventory/product-form.tsx",
      "lines": 619
    },
    "byType": {}
  },
  "recommendations": [
    "🚨 CRITICAL: 59 files are critically oversized. These need immediate refactoring to maintain code quality.",
    "🧩 Components: 42 components exceed 300 lines. Split into smaller, focused components for better reusability.",
    "🗄️ DAL: 2 DAL files exceed 500 lines. Split by operation type (queries/mutations) or by domain.",
    "📊 Overall: Only 0.0% of files meet size limits. Implement a file size policy and regular refactoring."
  ]
}